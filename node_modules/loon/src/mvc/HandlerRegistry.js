"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HandlerMetadata_1 = require("./HandlerMetadata");
const Reflection_1 = require("../core/Reflection");
const HandlerParamMetadata_1 = require("./HandlerParamMetadata");
const ConvertUtil_1 = require("../util/ConvertUtil");
class HandlerRegistry {
    static registerParam(type, actionName, index, paramType, expression, options) {
        const handlerMetadata = this.getHandler(type, actionName);
        const params = Reflection_1.Reflection.getParams(type.prototype, actionName);
        const returnType = params[index];
        const handlerParam = new HandlerParamMetadata_1.HandlerParamMetadata(type, actionName, index, returnType, paramType, expression);
        handlerParam.setOptions(options);
        handlerMetadata.params.set(index, handlerParam);
    }
    /**
     * safe get HandlerMetadata
     *
     * @param type
     * @param actionName
     * @returns {HandlerMetadata}
     */
    static getHandler(type, actionName) {
        let handlerStore = this._handlers.get(type);
        if (typeof handlerStore === 'undefined') {
            handlerStore = new Map();
            this._handlers.set(type, handlerStore);
        }
        let handlerMetadata = handlerStore.get(actionName);
        if (typeof handlerMetadata === 'undefined') {
            handlerMetadata = new HandlerMetadata_1.HandlerMetadata(type, actionName);
            const params = Reflection_1.Reflection.getParams(type.prototype, actionName);
            if (params) {
                const handlerParams = params.map((returnType, index) => new HandlerParamMetadata_1.HandlerParamMetadata(type, actionName, index, returnType));
                const handlerParamsMap = ConvertUtil_1.ConvertUtil.convertArrayToMap(handlerParams);
                handlerMetadata.params = handlerParamsMap;
            }
            handlerStore.set(actionName, handlerMetadata);
        }
        return handlerMetadata;
    }
}
HandlerRegistry._handlers = new Map();
HandlerRegistry.handlers = HandlerRegistry._handlers;
exports.HandlerRegistry = HandlerRegistry;
//# sourceMappingURL=HandlerRegistry.js.map