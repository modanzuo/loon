"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ControllerRegistry_1 = require("../ControllerRegistry");
function Get(route) {
    return (target, actionName) => {
        registerHelper(target, actionName, "get", route);
    };
}
exports.Get = Get;
function Post(route) {
    return (target, actionName) => {
        registerHelper(target, actionName, "post", route);
    };
}
exports.Post = Post;
function Put(route) {
    return (target, actionName) => {
        registerHelper(target, actionName, "put", route);
    };
}
exports.Put = Put;
function Patch(route) {
    return (target, actionName) => {
        registerHelper(target, actionName, "patch", route);
    };
}
exports.Patch = Patch;
function Delete(route) {
    return (target, actionName) => {
        registerHelper(target, actionName, "delete", route);
    };
}
exports.Delete = Delete;
function Options(route) {
    return (target, actionName) => {
        registerHelper(target, actionName, "options", route);
    };
}
exports.Options = Options;
function All(route) {
    return (target, actionName) => {
        registerHelper(target, actionName, "all", route);
    };
}
exports.All = All;
// head request should not return anything
function Head(route) {
    return (target, actionName) => {
        registerHelper(target, actionName, "head", route);
    };
}
exports.Head = Head;
function registerHelper(target, actionName, method, route) {
    ControllerRegistry_1.ControllerRegistry.registerAction(target.constructor, actionName, method, route);
}
//# sourceMappingURL=Method.js.map