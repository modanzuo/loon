"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const DIContainer_1 = require("../../di/DIContainer");
const ConfigContainer_1 = require("../ConfigContainer");
const ConfigException_1 = require("../error/ConfigException");
const TypeUtil_1 = require("../../util/TypeUtil");
function Value(expression) {
    return (target, key, index) => {
        if (typeof index !== 'undefined') {
            const params = Reflect.getMetadata("design:paramtypes", target, key);
            const type = params[index];
            DIContainer_1.DIContainer.registerParamHandler({
                type: target,
                index,
                getValue: getValue(type, expression)
            });
        }
        else {
            const type = Reflect.getMetadata("design:type", target, key);
            DIContainer_1.DIContainer.registerPropertyHandler({
                type: target.constructor,
                key,
                getValue: getValue(type, expression)
            });
        }
    };
}
exports.Value = Value;
function getValue(type, expression) {
    if (TypeUtil_1.TypeUtil.isSimpleType(type)) {
        return () => ConfigContainer_1.ConfigContainer.get(expression);
    }
    else {
        throw new ConfigException_1.ConfigException(`[TYPED] Value decorator don't support type ${type}`);
    }
}
//# sourceMappingURL=Value.js.map